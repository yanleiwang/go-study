package reflect_

import (
	"testing"
)

/*
反射是什么?  反射是运行时 获得变量的 值信息和类型信息.
我们可以通过反射获取变量的所有字段类型 和 值(值只能获取导出字段的)
可以设置变量的值, 可以获取所有方法, 调用方法等等

reflect 包有一个很强的假设： 你知道你操作的
是什么 Kind(类别)

所以 reflect 的方法， 如果你调用得不对， 它直
接就 panic。

在调用 API 之前一定要先读注释， 确认什么样
的情况下可以调用！ ！


Go 反射编程小技巧
• 读写值， 使用 reflect.Value
• 读取类型信息， 使用 reflect.Type
• 时刻注意你现在操作的类型是不是指针。 指针和指针指向的对象在反射层面上是两
个东西
• 大多数情况， 指针类型对应的 reflect.Type 毫无用处。 我们操作的都是指针指向的
那个类型
• 没有足够的测试就不要用反射， 因为反射 API 充斥着 panic
• 切片和数组在反射上也是两个东西
• 方法类型的字段和方法， 在反射上也是两个不同的东西

*/

func Test_Kind(t *testing.T) {
	println("ok")
}
